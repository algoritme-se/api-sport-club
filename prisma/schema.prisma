// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthRole {
  STUDENT
  TEACHER
}

model AuthUser {
  id            String   @id @default(uuid())
  email         String   @unique
  password_hash String
  active        Boolean
  two_fa_key    String
  created_at    DateTime
  updated_at    DateTime

  role    AuthRole
  student Student?
  teacher Teacher?

  @@map("authentication")
}

model Student {
  id                String         @id @default(uuid())
  name              String
  document_number   String
  address           String
  photoUrl          String?
  email             String         @unique
  modality          Modality[]
  modality_level    modality_level @relation(fields: [modality_level_id], references: [id])
  modality_level_id String
  plan              Plan           @relation(fields: [plan_id], references: [id])
  plan_id           String
  appointments      Appointment[]
  auth_user         AuthUser       @relation(fields: [auth_user_id], references: [id])
  auth_user_id      String         @unique

  @@map("students")
}

model Teacher {
  id         String     @id @default(uuid())
  name       String     @unique
  modalities Modality[]
  Class      Class[]

  auth_user    AuthUser @relation(fields: [auth_user_id], references: [id])
  auth_user_id String   @unique

  @@map("teachers")
}

model Modality {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  students    Student[]
  teachers    Teacher[]
  class       Class[]

  @@map("modalities")
}

model modality_level {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  Student     Student[]

  @@map("modality_levels")
}

model Plan {
  id                        String    @id @default(uuid())
  name                      String    @unique
  price                     Float
  description               String
  student                   Student[]
  allowed_modalities_number Int

  @@map("plans")
}

model ClubUnit {
  id          String  @id @default(uuid())
  name        String  @unique
  address     String
  description String
  Class       Class[]
  latitude    Decimal
  longitude   Decimal

  @@map("club_units")
}

model Class {
  id               String        @id @default(uuid())
  modality         Modality      @relation(fields: [modality_id], references: [id])
  modality_id      String
  teacher          Teacher       @relation(fields: [teacherId], references: [id])
  teacherId        String
  date             DateTime
  maximum_students Int
  unity            ClubUnit      @relation(fields: [club_unit_id], references: [id])
  club_unit_id     String
  students_booked  Int
  Appointment      Appointment[]

  @@map("classes")
}

model Appointment {
  id        String   @id @default(uuid())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  class     Class    @relation(fields: [class_id], references: [id])
  class_id  String
  create_ad DateTime

  @@map("appointments")
}
