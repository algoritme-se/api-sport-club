// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  TEACHER
  ADMIN
}

enum UserStatus {
  PENDING
  TRIAL
  PAID
}

model User {
  id                String          @id @default(uuid())
  name              String
  photo_url         String?
  email             String          @unique
  password          String
  role              UserRole        @default(STUDENT)
  modality          Modality[]
  modality_level_id String?
  modality_level    modality_level? @relation(fields: [modality_level_id], references: [id])
  Appointment       Appointment[]
  user_status       UserStatus      @default(TRIAL)
  plan              Plan?           @relation(fields: [plan_id], references: [id])
  plan_id           String?
  class             Class[]

  @@map("users")
}

model Modality {
  id          String  @id @default(uuid())
  name        String  @unique
  description String
  user        User[]
  class       Class[]

  @@map("modalities")
}

model modality_level {
  id          String @id @default(uuid())
  name        String @unique
  description String
  User        User[]

  @@map("modality_levels")
}

model Plan {
  id                        String @id @default(uuid())
  name                      String @unique
  price                     Float
  description               String
  allowed_modalities_number Int
  users                     User[]

  @@map("plans")
}

model ClubUnit {
  id          String  @id @default(uuid())
  name        String  @unique
  address     String
  description String
  Class       Class[]
  latitude    Decimal
  longitude   Decimal

  @@map("club_units")
}

model Class {
  id               String        @id @default(uuid())
  modality         Modality      @relation(fields: [modality_id], references: [id])
  modality_id      String
  date             DateTime
  maximum_students Int
  unity            ClubUnit      @relation(fields: [club_unit_id], references: [id])
  club_unit_id     String
  students_booked  Int
  Appointment      Appointment[]
  User             User[]

  @@map("classes")
}

model Appointment {
  id        String   @id @default(uuid())
  user      User[]
  class     Class    @relation(fields: [class_id], references: [id])
  class_id  String
  create_ad DateTime @default(now())

  @@map("appointments")
}
